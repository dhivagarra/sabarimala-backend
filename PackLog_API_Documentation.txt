SwamiPro PackLog API Documentation (For Mobile Development)
===========================================================

Base URL:
---------
https://swamipro-dev.azurewebsites.net/api/packlog

Authentication:
---------------
(If authentication is required, add your token/header details here.)

Endpoints:
----------

1. Create Pack Log
------------------
POST /packlog
Body (JSON):
{
  "sealDT": "YYYY-MM-DD HH:mm:ss",
  "transNo": "string",
  "nada": "string",
  "vanchi": "string",
  "vanchiNo": "string",
  "bagno": "string",
  "sealBy": "string",
  "receDT": "YYYY-MM-DD HH:mm:ss",
  "receBy": "string",
  "packStatus": "string",
  "comments": "string",
  "createdBy": "string",
  "createAt": "YYYY-MM-DD HH:mm:ss",
  "isActive": "Y" | "N"
}

2. Get All Pack Logs
--------------------
GET /packlog

3. Get Pack Log by ID
---------------------
GET /packlog/:packid

4. Update Pack Log by ID
------------------------
PUT /packlog/:packid
Body (JSON): (same as Create Pack Log)

5. Delete Pack Log by ID
------------------------
DELETE /packlog/:packid

6. Get Pack Log by Transaction No
---------------------------------
GET /packlog/transno/:transNo

7. Update Pack Log by Transaction No
------------------------------------
PUT /packlog/transno/:transNo
Body (JSON): (same as Create Pack Log, except transNo is in URL)

8. Delete Pack Log by Transaction No
------------------------------------
DELETE /packlog/transno/:transNo

Date Format:
------------
All date fields (sealDT, receDT, createAt) must be in "YYYY-MM-DD HH:mm:ss" format (24-hour, no timezone).

Example:
--------
{
  "sealDT": "2025-09-05 12:35:00",
  "transNo": "TRN135",
  "nada": "Nada1",
  "vanchi": "Vanchi1",
  "vanchiNo": "VN001",
  "bagno": "BAG001",
  "sealBy": "UserA",
  "receDT": "2025-09-05 13:00:00",
  "receBy": "UserB",
  "packStatus": "Sealed",
  "comments": "All good",
  "createdBy": "UserA",
  "createAt": "2025-09-05 12:35:00",
  "isActive": "Y"
}

Notes:
------
- All date/times are stored and returned as server local time (no timezone conversion).
- Use the correct field names and formats as shown above.
- For mobile, use standard HTTP requests (fetch, axios, etc.) with JSON bodies.
- For any errors, the API will return a JSON object with a 'message' field.
